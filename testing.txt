import React from 'react';
import { useDrag } from 'react-dnd';

const WorkflowStep = ({ step, index, moveStep }) => {
  const ref = React.useRef(null);

  const [{ isDragging }, drag] = useDrag(() => ({
    type: 'WORKFLOW_STEP',
    item: { index },  // The index of the current step
    collect: (monitor) => ({
      isDragging: !!monitor.isDragging(),  // Tracks whether this item is being dragged
    }),
  }));

  drag(ref);  // Connects the drag functionality to the DOM element

  return (
    <div
      ref={ref}
      style={{
        opacity: isDragging ? 0.5 : 1,  // Changes opacity when the item is dragged
        padding: '8px',
        marginBottom: '4px',
        backgroundColor: 'lightgrey',
        cursor: 'move',  // Changes the cursor to indicate that the item can be moved
      }}
    >
      {step.name}
    </div>
  );
};

export default WorkflowStep;



import React, { useState } from 'react';
import WorkflowStep from './WorkflowStep';
import { DndProvider } from 'react-dnd';
import { HTML5Backend } from 'react-dnd-html5-backend';

const WorkflowStepsList = () => {
  const [steps, setSteps] = useState([
    { id: 1, name: 'Step 1' },
    { id: 2, name: 'Step 2' },
    { id: 3, name: 'Step 3' },
    { id: 4, name: 'Step 4' },
  ]);

  const moveStep = (fromIndex, toIndex) => {
    const updatedSteps = [...steps];
    const [movedStep] = updatedSteps.splice(fromIndex, 1);  // Remove the step from its original position
    updatedSteps.splice(toIndex, 0, movedStep);  // Insert the step into its new position
    setSteps(updatedSteps);  // Update the state with the new order
  };

  return (
    <DndProvider backend={HTML5Backend}>
      <div>
        {steps.map((step, index) => (
          <WorkflowStep
            key={step.id}
            index={index}
            step={step}
            moveStep={moveStep}
          />
        ))}
      </div>
    </DndProvider>
  );
};

export default WorkflowStepsList;
